openapi: 3.1.0
x-stoplight:
  id: 4wvvx7c8j5ymv
info:
  title: Curb Data Specification
  version: 1.0.0
  summary: 'CDS is a data specification to help cities manage their curb zone programs and surrounding areas, and measure the utilization and impact.'
  description: 'The Curb Data Specification (CDS), a project of the Open Mobility Foundation (OMF), is a data standard and set of Application Programming Interfaces (APIs) that helps cities manage and companies use dynamic curb zones that optimize loading activities of people and goods, and measure the impact of these programs.'
  contact:
    url: 'https://github.com/openmobilityfoundation/curb-data-specification/'
    name: Open Mobility Foundation
    email: info@openmobilityfoundation.org
  license:
    name: Creative Commons Attribution 4.0 International Public License
    url: 'http://www.apache.org/licenses/LICENSE-2.0.htmlhttps://github.com/openmobilityfoundation/curb-data-specification/blob/0706316a7bfb0d6b5104c75608d8f66cb8101fe7/LICENCE'
servers: []
paths:
  /curbs/zones:
    get:
      summary: Query Curb Zones
      responses:
        '200':
          description: Zones Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                  time_zone:
                    type: string
                  last_updated:
                    $ref: '#/components/schemas/timestamp'
                  currency:
                    type: string
                  author:
                    type: string
                  license_url:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        zones:
                          type: array
                          items:
                            $ref: '#/components/schemas/curb-zone'
        '400':
          description: BAD_REQUEST
        '401':
          description: UNAUTHORIZED
        '403':
          description: FORBIDDEN
        '500':
          description: SERVER_ERROR
        '503':
          description: SERVICE_UNAVAILABLE
      operationId: get-curbs-zones
      description: 'This required endpoint must be implemented by every Curbs API server. If attaching policies to curb zones, the Query Curb Policies endpoint is also required.'
      parameters:
        - schema:
            $ref: '#/components/schemas/uuid'
          in: query
          name: area
          description: 'The ID of a Curb Area. If specified, only return Curb Zones contained within this area.'
        - schema:
            $ref: '#/components/schemas/latitude'
          in: query
          name: min_lat
          description: 'If specified only return Curb Zones that intersect the supplied bounding box. Must be used together with `min_lng`, `max_lat`, and `max_lng`. This parameter is incompatible with `lat`, `lng`, and `radius`.'
        - schema:
            $ref: '#/components/schemas/longitude'
          in: query
          name: min_lng
          description: 'If specified only return Curb Zones that intersect the supplied bounding box. Must be used together with `min_lat`, `max_lat`, and `max_lng`. This parameter is incompatible with `lat`, `lng`, and `radius`.'
        - schema:
            $ref: '#/components/schemas/latitude'
          in: query
          name: max_lat
          description: 'If specified only return Curb Zones that intersect the supplied bounding box. Must be used together with `min_lat`, `max_lng`, and `max_lng`. This parameter is incompatible with `lat`, `lng`, and `radius`.'
        - schema:
            $ref: '#/components/schemas/longitude'
          in: query
          name: max_lng
          description: 'If specified only return Curb Zones that intersect the supplied bounding box. Must be used together with `min_lat`, `max_lng`, and `max_lat`. This parameter is incompatible with `lat`, `lng`, and `radius`.'
        - schema:
            $ref: '#/components/schemas/latitude'
          in: query
          name: lat
          description: 'Returns only Curb Zones that are within radius centimeters of the point identified by lat/lng. Must be used together with `lng` and `radius`. This parameter is incompatible with `min_lat`, `min_lng`, `max_lat` and `max_lng`.'
        - schema:
            $ref: '#/components/schemas/longitude'
          in: query
          name: lng
          description: 'Returns only Curb Zones that are within radius centimeters of the point identified by lat/lng. Must be used together with `lat` and `radius`. This parameter is incompatible with `min_lat`, `min_lng`, `max_lat` and `max_lng`.'
        - schema:
            type: integer
            exclusiveMinimum: 0
          in: query
          name: radius
          description: 'Returns only Curb Zones that are within radius centimeters of the point identified by lat/lng. Must be used together with `lat` and `lng`. This parameter is incompatible with `min_lat`, `min_lng`, `max_lat` and `max_lng`.'
      tags:
        - Curbs API
  /curbs/areas:
    get:
      summary: Query Curb Areas
      responses:
        '200':
          description: Areas Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                  time_zone:
                    type: string
                  last_updated:
                    $ref: '#/components/schemas/timestamp'
                  currency:
                    type: string
                  author:
                    type: string
                  license_url:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        areas:
                          type: array
                          items:
                            $ref: '#/components/schemas/curb-area'
        '400':
          description: BAD_REQUEST
        '401':
          description: UNAUTHORIZED
        '403':
          description: FORBIDDEN
        '500':
          description: SERVER_ERROR
        '501':
          description: NOT_IMPLEMENTED
        '503':
          description: SERVICE_UNAVAILABLE
      operationId: get-curbs-areas
      description: 'Optional endpoint. If not implemented, the server should reply with 501 Not Implemented.'
      parameters:
        - schema:
            $ref: '#/components/schemas/latitude'
          in: query
          name: min_lat
          description: 'If specified only return Curb Areas that intersect the supplied bounding box. Must be used together with `min_lng`, `max_lat`, and `max_lng`. This parameter is incompatible with `lat`, `lng`, and `radius`.'
        - schema:
            $ref: '#/components/schemas/longitude'
          in: query
          name: min_lng
          description: 'If specified only return Curb Areas that intersect the supplied bounding box. Must be used together with `min_lat`, `max_lat`, and `max_lng`. This parameter is incompatible with `lat`, `lng`, and `radius`.'
        - schema:
            $ref: '#/components/schemas/latitude'
          in: query
          name: max_lat
          description: 'If specified only return Curb Areas that intersect the supplied bounding box. Must be used together with `min_lat`, `max_lng`, and `max_lng`. This parameter is incompatible with `lat`, `lng`, and `radius`.'
        - schema:
            $ref: '#/components/schemas/longitude'
          in: query
          name: max_lng
          description: 'If specified only return Curb Areas that intersect the supplied bounding box. Must be used together with `min_lat`, `max_lng`, and `max_lat`. This parameter is incompatible with `lat`, `lng`, and `radius`.'
        - schema:
            $ref: '#/components/schemas/latitude'
          in: query
          name: lat
          description: 'Returns only Curb Areas that are within radius centimeters of the point identified by lat/lng. Must be used together with `lng` and `radius`. This parameter is incompatible with `min_lat`, `min_lng`, `max_lat` and `max_lng`.'
        - schema:
            $ref: '#/components/schemas/longitude'
          in: query
          name: lng
          description: 'Returns only Curb Areas that are within radius centimeters of the point identified by lat/lng. Must be used together with `lat` and `radius`. This parameter is incompatible with `min_lat`, `min_lng`, `max_lat` and `max_lng`.'
        - schema:
            type: integer
            exclusiveMinimum: 0
          in: query
          name: radius
          description: 'Returns only Curb Areas that are within radius centimeters of the point identified by lat/lng. Must be used together with `lat` and `lng`. This parameter is incompatible with `min_lat`, `min_lng`, `max_lat` and `max_lng`.'
      tags:
        - Curbs API
  /curbs/spaces:
    get:
      summary: Query Curb Spaces
      responses:
        '200':
          description: Spaces Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                  time_zone:
                    type: string
                  last_updated:
                    $ref: '#/components/schemas/timestamp'
                  currency:
                    type: string
                  author:
                    type: string
                  license_url:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        spaces:
                          type: array
                          items:
                            $ref: '#/components/schemas/curb-space'
        '400':
          description: BAD_REQUEST
        '401':
          description: UNAUTHORIZED
        '403':
          description: FORBIDDEN
        '500':
          description: SERVER_ERROR
        '501':
          description: NOT_IMPLEMENTED
        '503':
          description: SERVICE_UNAVAILABLE
      operationId: get-curbs-spaces
      description: 'Optional endpoint. If not implemented, the server should reply with 501 Not Implemented.'
      parameters:
        - schema:
            $ref: '#/components/schemas/latitude'
          in: query
          name: min_lat
          description: 'If specified only return Curb Spaces that intersect the supplied bounding box. Must be used together with `min_lng`, `max_lat`, and `max_lng`. This parameter is incompatible with `lat`, `lng`, and `radius`.'
        - schema:
            $ref: '#/components/schemas/longitude'
          in: query
          name: min_lng
          description: 'If specified only return Curb Spaces that intersect the supplied bounding box. Must be used together with `min_lat`, `max_lat`, and `max_lng`. This parameter is incompatible with `lat`, `lng`, and `radius`.'
        - schema:
            $ref: '#/components/schemas/latitude'
          in: query
          name: max_lat
          description: 'If specified only return Curb Spaces that intersect the supplied bounding box. Must be used together with `min_lat`, `max_lng`, and `max_lng`. This parameter is incompatible with `lat`, `lng`, and `radius`.'
        - schema:
            $ref: '#/components/schemas/longitude'
          in: query
          name: max_lng
          description: 'If specified only return Curb Spaces that intersect the supplied bounding box. Must be used together with `min_lat`, `max_lng`, and `max_lat`. This parameter is incompatible with `lat`, `lng`, and `radius`.'
        - schema:
            $ref: '#/components/schemas/latitude'
          in: query
          name: lat
          description: 'Returns only Curb Spaces that are within radius centimeters of the point identified by lat/lng. Must be used together with `lng` and `radius`. This parameter is incompatible with `min_lat`, `min_lng`, `max_lat` and `max_lng`.'
        - schema:
            $ref: '#/components/schemas/longitude'
          in: query
          name: lng
          description: 'Returns only Curb Spaces that are within radius centimeters of the point identified by lat/lng. Must be used together with `lat` and `radius`. This parameter is incompatible with `min_lat`, `min_lng`, `max_lat` and `max_lng`.'
        - schema:
            type: integer
            exclusiveMinimum: 0
          in: query
          name: radius
          description: 'Returns only Curb Spaces that are within radius centimeters of the point identified by lat/lng. Must be used together with `lat` and `lng`. This parameter is incompatible with `min_lat`, `min_lng`, `max_lat` and `max_lng`.'
      tags:
        - Curbs API
  /curbs/policies:
    get:
      summary: Query Curb Policies
      responses:
        '200':
          description: Policies Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                  time_zone:
                    type: string
                  last_updated:
                    $ref: '#/components/schemas/timestamp'
                  currency:
                    type: string
                  author:
                    type: string
                  license_url:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        policies:
                          type: array
                          items:
                            $ref: '#/components/schemas/curb-policy'
        '400':
          description: BAD_REQUEST
        '401':
          description: UNAUTHORIZED
        '403':
          description: FORBIDDEN
        '500':
          description: SERVER_ERROR
        '501':
          description: NOT_IMPLEMENTED
        '503':
          description: SERVICE_UNAVAILABLE
      operationId: get-curbs-policies
      description: 'Optional endpoint, but required if Curb Zones contain policy_id references. If not implemented, the server should reply with 501 Not Implemented.'
      parameters:
        - schema:
            type: string
          in: query
          name: ids
          description: Comma-separated list of Policy IDs.
      tags:
        - Curbs API
  '/curbs/zones/{id}':
    get:
      summary: Fetch a Curb Zone
      responses:
        '200':
          description: Zone Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                  time_zone:
                    type: string
                  last_updated:
                    $ref: '#/components/schemas/timestamp'
                  currency:
                    type: string
                  author:
                    type: string
                  license_url:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        zone:
                          $ref: '#/components/schemas/curb-zone'
        '400':
          description: BAD_REQUEST
        '401':
          description: UNAUTHORIZED
        '403':
          description: FORBIDDEN
        '404':
          description: NOT_FOUND
        '500':
          description: SERVER_ERROR
        '501':
          description: NOT_IMPLEMENTED
        '503':
          description: SERVICE_UNAVAILABLE
      operationId: get-curbs-zone
      description: 'Fetch a single Curb Zone by ID. Optional endpoint. If not implemented, the server should reply with 501 Not Implemented.'
      parameters:
        - schema:
            type: string
          name: id
          in: path
          required: true
          description: Curb Zone ID
        - schema:
            $ref: '#/components/schemas/timestamp'
          in: query
          name: time
          description: 'The Curb Zone object will only be returned if its validity period includes this time; otherwise, the server should reply with 404 Not Found.'
        - schema:
            type: boolean
          in: query
          name: show_historic
          description: 'Whether to return historic, retired curb zone data.'
      tags:
        - Curbs API
  '/curbs/areas/{id}':
    get:
      summary: Fetch a Curb Area
      responses:
        '200':
          description: Area Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                  time_zone:
                    type: string
                  last_updated:
                    $ref: '#/components/schemas/timestamp'
                  currency:
                    type: string
                  author:
                    type: string
                  license_url:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        area:
                          $ref: '#/components/schemas/curb-area'
        '400':
          description: BAD_REQUEST
        '401':
          description: UNAUTHORIZED
        '403':
          description: FORBIDDEN
        '404':
          description: NOT_FOUND
        '500':
          description: SERVER_ERROR
        '501':
          description: NOT_IMPLEMENTED
        '503':
          description: SERVICE_UNAVAILABLE
      operationId: get-curbs-area
      description: 'Fetch a single Curb Area by ID. Optional endpoint. If not implemented, the server should reply with 501 Not Implemented.'
      parameters:
        - schema:
            type: string
          name: id
          in: path
          required: true
          description: Curb Area ID
      tags:
        - Curbs API
  '/curbs/spaces/{id}':
    get:
      summary: Fetch a Curb Space
      responses:
        '200':
          description: Space Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                  time_zone:
                    type: string
                  last_updated:
                    $ref: '#/components/schemas/timestamp'
                  currency:
                    type: string
                  author:
                    type: string
                  license_url:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        space:
                          $ref: '#/components/schemas/curb-space'
        '400':
          description: BAD_REQUEST
        '401':
          description: UNAUTHORIZED
        '403':
          description: FORBIDDEN
        '404':
          description: NOT_FOUND
        '500':
          description: SERVER_ERROR
        '501':
          description: NOT_IMPLEMENTED
        '503':
          description: SERVICE_UNAVAILABLE
      operationId: get-curbs-space
      description: 'Fetch a single Curb Space by ID. Optional endpoint. If not implemented, the server should reply with 501 Not Implemented.'
      parameters:
        - schema:
            type: string
          name: id
          in: path
          required: true
          description: Curb Space ID
        - schema:
            $ref: '#/components/schemas/timestamp'
          in: query
          name: time
          description: Availability data (if supplied) will be returned as of this time.
      tags:
        - Curbs API
  '/curbs/policies/{id}':
    get:
      summary: Fetch a Curb Policy
      responses:
        '200':
          description: Policy Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                  time_zone:
                    type: string
                  last_updated:
                    $ref: '#/components/schemas/timestamp'
                  currency:
                    type: string
                  author:
                    type: string
                  license_url:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        policy:
                          $ref: '#/components/schemas/curb-policy'
        '400':
          description: BAD_REQUEST
        '401':
          description: UNAUTHORIZED
        '403':
          description: FORBIDDEN
        '404':
          description: NOT_FOUND
        '500':
          description: SERVER_ERROR
        '503':
          description: SERVICE_UNAVAILABLE
      operationId: get-curbs-policy
      description: Fetch a single Curb Policy by ID.
      parameters:
        - schema:
            type: string
          name: id
          in: path
          required: true
          description: Curb Policy ID
      tags:
        - Curbs API
  /events/events:
    get:
      summary: Fetch Event Events
      tags:
        - Events API
      responses: {}
      operationId: get-events-events
  /events/status:
    get:
      summary: Fetch Event Status
      tags:
        - Events API
      responses: {}
      operationId: get-events-status
  /metrics/sessions:
    get:
      summary: Fetch Metric Session
      tags:
        - Metrics API
      responses: {}
      operationId: get-metrics-sessions
  /metrics/aggregates:
    get:
      summary: Fetch Metric Aggregates
      tags:
        - Metrics API
      responses: {}
      operationId: get-metrics-aggregates
components:
  schemas:
    timestamp:
      description: Timestamp in milliseconds since Epoch.
      type: integer
      minimum: 100000000000
      maximum: 99999999999999
      x-internal: false
    unit-of-time:
      description: An enumeration for units of time.
      type: string
      enum:
        - second
        - minute
        - hour
        - day
        - week
        - month
        - year
      x-internal: false
    uuid:
      type: string
      format: uuid
      x-internal: false
    latitude:
      type: number
      minimum: -90
      maximum: 90
      x-internal: false
    longitude:
      type: number
      minimum: -180
      maximum: 180
      x-internal: false
    curb-zone:
      type: object
      properties:
        curb_zone_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
            - description: The ID of this Curb Zone.
        geometry:
          type: object
          properties:
            type:
              type: string
            coordinates:
              type: array
              items:
                type: number
          required:
            - type
            - coordinates
          description: The spatial extent of this curb zone.
        curb_policy_ids:
          type: array
          items:
            $ref: '#/components/schemas/uuid'
          description: 'An array of IDs of Policy objects. Together, these define the regulations of this Curb Zone.'
        prev_policies:
          type: array
          items:
            type: object
            properties:
              curb_policy_ids:
                type: array
                items:
                  $ref: '#/components/schemas/uuid'
                description: 'An array of IDs of Policy objects. Together, these define the previous regulations of this Curb Zone.'
              start_date:
                allOf:
                  - $ref: '#/components/schemas/timestamp'
                  - description: The date/time that this policy started being active for this curb location.
              end_date:
                allOf:
                  - $ref: '#/components/schemas/timestamp'
                  - description: The date/time that this policy ended being active for this curb location.
            required:
              - curb_policy_ids
              - start_date
              - end_date
          description: An array of information about what previous policies applied to a curb zone and when.
        published_date:
          allOf:
            - $ref: '#/components/schemas/timestamp'
            - description: The date/time that this curb zone was first published in this data feed.
        last_updated_date:
          allOf:
            - $ref: '#/components/schemas/timestamp'
            - description: The date/time that the properties of ths curb zone were last updated.
        prev_curb_zone_ids:
          type: array
          items:
            $ref: '#/components/schemas/uuid'
          description: An array of IDs of previous curb zone objects. They are listed in order with the most recent ones first.
        start_date:
          allOf:
            - $ref: '#/components/schemas/timestamp'
            - description: The earliest time that the data for this curb location is known to be valid.
        end_date:
          allOf:
            - $ref: '#/components/schemas/timestamp'
            - description: The time at which the data for this curb location ceases to be valid.
        location_references:
          type: array
          items:
            type: object
            properties:
              source:
                type: string
                format: url
                description: An identifier for the source of the linear reference. This MUST be a URL pointing to more information about the underlying map or reference system.
              ref_id:
                type: string
                description: The linear feature being referenced (usually a street or curb segment).
              start:
                type: integer
                description: The distance (in centimeters) from the start of the referenced linear feature to the start of the Curb Zone.
                minimum: 0
              end:
                type: integer
                description: 'The distance (in centimeters) from the start of the referenced linear feature to the end of the Curb Zone. ''end'' MAY be smaller than start, implying that the direction of the Curb Zone is opposite to the direction of the referenced linear feature.'
                minimum: 0
              side:
                type: string
                enum:
                  - left
                  - right
                description: 'If the referenced linear feature is a roadway, the side of the roadway on which the Curb Zone may be found, when heading from the start to the end of the feature in its native orientation.'
            required:
              - source
              - ref_id
              - start
              - end
            description: 'A linear reference defines a Curb Zone''s position by reference to a linear feature, like a street centerline or edge-of-pavement line.'
          description: One or more linear references for this Curb Zone.
        name:
          type: string
          description: A human-readable name for this Curb Zone that identifies it to end users.
        user_zone_id:
          type: string
          description: 'An identifier that can be used to refer to this Curb Zone on physical signage as well as within mobile applications, typically for payment purposes.'
        street_name:
          type: string
          description: The name of the street that this Curb Zone is on.
        cross_street_start_name:
          type: string
          description: The name of the cross street at or before the start of this Curb Zone.
        cross_street_end_name:
          type: string
          description: The name of the cross street at the end of this Curb Zone.
        length:
          type: integer
          description: 'The length, in centimeters, of the Curb Zone when projected along the street centerline. Note that this is the definitive length of the curb area, and not the edge length of the geographic polygon.'
          exclusiveMinimum: 0
        available_space_lengths:
          type: array
          items:
            type: integer
          description: 'If availability information is present, an array of numbers containing the lengths (in centimeters) of all known non-overlapping available spaces within this Curb Zone.'
        availability_time:
          allOf:
            - $ref: '#/components/schemas/timestamp'
            - description: 'If availability information is present, the timestamp corresponding to the most recent time that availability was computed for this zone.'
        width:
          type: integer
          description: 'The width, in centimeters, that the Curb Zone occupies from the curb to the roadway lane.'
          exclusiveMinimum: 0
        parking_angle:
          type: string
          enum:
            - parallel
            - perpendicular
            - angled
          description: The angle in which passenger vehicles in this Curb Zone are meant to park.
        num_spaces:
          type: integer
          description: The number of demarcated spaces within this Curb Zone.
        street_side:
          type: string
          enum:
            - 'N'
            - NE
            - E
            - SE
            - S
            - SW
            - W
            - NW
          description: The cardinal or subcardinal direction representing the side of the roadway that this curb is on.
        median:
          type: boolean
          description: 'If "true", this curb location is on the median of a street, rather than its edge.'
        entire_roadway:
          type: boolean
          description: 'If "true", this curb location takes up the entire width of the roadway (which may be impassible for through traffic when the Curb Zone is being used for parking or loading).'
        curb_area_ids:
          type: array
          items:
            $ref: '#/components/schemas/uuid'
          description: The ID(s) of the Curb Areas that this Curb Zone is a part of.
        curb_space_ids:
          type: array
          items:
            $ref: '#/components/schemas/uuid'
          description: The ID(s) of the Curb Spaces that this Curb Zone contains.
      required:
        - curb_zone_id
        - geometry
        - curb_policy_ids
        - published_date
        - last_updated_date
        - start_date
      example:
        curb_zone_id: 7d8a5885-e949-4ac9-afb7-fa4d43b68530
        geometry:
          type: Polygon
          coordinates:
            - - - -73.982105
                - 40.767932
              - - -73.973694
                - 40.764551
              - - -73.949318
                - 40.796918
              - - -73.958416
                - 40.800686
              - - -73.982105
                - 40.767932
        curb_policy_ids:
          - cd0996d7-3765-4f0b-a72e-7caf7cf3fe21
        published_date: 1552678594428
        last_updated_date: 1552678594428
        start_date: 1552678594428
      description: A contiguous region of curb space on a single block face that is regulated in a particular way.
      x-internal: false
    curb-area:
      type: object
      properties:
        curb_area_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
            - description: The ID for the Curb Area.
        geometry:
          type: object
          properties:
            type:
              type: string
            coordinates:
              type: array
              items:
                type: number
          required:
            - type
            - coordinates
          description: The spatial extent of this curb location.
        name:
          type: string
          description: The name of this curb area for reference.
        published_date:
          allOf:
            - $ref: '#/components/schemas/timestamp'
            - description: The date/time that this curb area was first published in this data feed.
        last_updated_date:
          allOf:
            - $ref: '#/components/schemas/timestamp'
            - description: The date/time that the properties of ths curb area were last updated.
        curb_zone_ids:
          type: array
          items:
            $ref: '#/components/schemas/uuid'
          description: The IDs of all the Curb Zones included within this Curb Area at the requested time.
      required:
        - curb_area_id
        - geometry
        - published_date
        - last_updated_date
        - curb_zone_ids
      example:
        curb_area_id: 91eb651d-f91f-4ba2-9553-75ca368c7e1f
        geometry:
          type: Polygon
          coordinates:
            - - - -73.982105
                - 40.767932
              - - -73.973694
                - 40.764551
              - - -73.949318
                - 40.796918
              - - -73.958416
                - 40.800686
              - - -73.982105
                - 40.767932
        name: Central business district
        published_date: 1552678594428
        last_updated_date: 1552678594428
        curb_zone_ids:
          - 7d8a5885-e949-4ac9-afb7-fa4d43b68530
      description: A particular neighborhood or area of interest that includes one or more Curb Zones.
      x-internal: false
    curb-space:
      type: object
      properties:
        curb_space_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
            - description: The ID of the Curb Space.
        geometry:
          type: object
          properties:
            type:
              type: string
            coordinates:
              type: array
              items:
                type: number
          required:
            - type
            - coordinates
          description: The spatial extent of this curb location.
        name:
          type: string
          description: The name of this curb space for reference.
        published_date:
          allOf:
            - $ref: '#/components/schemas/timestamp'
            - description: The date/time that this curb area was first published in this data feed.
        last_updated_date:
          allOf:
            - $ref: '#/components/schemas/timestamp'
            - description: The date/time that the properties of ths curb area were last updated.
        curb_zone_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
            - description: The ID of the Curb Zone this space is within.
        space_number:
          type: integer
          description: 'The sequence number of this space within its Zone. If specified, two spaces within the same Curb Zone MUST NOT share a space number, and space numbers SHOULD be consecutive positive integers starting at 1.'
        length:
          type: integer
          description: Length in centimeters of this Space.
        width:
          type: integer
          description: Width in centimeters of this Space.
        available:
          type: boolean
          description: Whether this space is available for vehicles to park in at the specified time.
        availability_time:
          allOf:
            - $ref: '#/components/schemas/timestamp'
            - description: 'If availability information is present, the most recent time that availability was computed for this space.'
      required:
        - curb_space_id
        - geometry
        - published_date
        - last_updated_date
        - curb_zone_id
        - length
      example:
        curb_space_id: 47c877ce-2670-4300-9ec2-6a1f3af707b6
        geometry:
          type: Polygon
          coordinates:
            - - - -73.982105
                - 40.767932
              - - -73.973694
                - 40.764551
              - - -73.949318
                - 40.796918
              - - -73.958416
                - 40.800686
              - - -73.982105
                - 40.767932
        name: A487
        published_date: 1552678594428
        last_updated_date: 1552678594428
        curb_zone_id: 7d8a5885-e949-4ac9-afb7-fa4d43b68530
        space_number: 487
        length: 550
        width: 260
        available: false
        availability_time: 1657213115826
      description: An individual demarcated space within a Curb Zone.
      x-internal: false
    curb-policy:
      type: object
      properties:
        curb_policy_id:
          allOf:
            - $ref: '#/components/schemas/uuid'
            - description: An ID that uniquely identifies this exact policy across Curb Zones.
        published_date:
          allOf:
            - $ref: '#/components/schemas/timestamp'
            - description: The date/time that this policy was first published in this data feed.
        priority:
          type: integer
          description: 'Specifies which other policies this one takes precedence over. If two Policies on the same Curb Zone have overlapping Time Spans and apply to the same user class, the one that applies at a given time is the one with the lowest priority.'
        rules:
          type: array
          items:
            type: object
            properties:
              activity:
                type: string
                enum:
                  - parking
                  - no parking
                  - loading
                  - no loading
                  - unloading
                  - no unloading
                  - stopping
                  - no stopping
                  - travel
                  - no travel
                description: The activity that is forbidden or permitted by this regulation.
              max_stay:
                type: integer
                description: 'The length of time (in units of max_stay_unit) for which the curb may be used under this regulation. If not specified, the curb may be used under this regulation indefinitely.'
              max_stay_unit:
                allOf:
                  - $ref: '#/components/schemas/unit-of-time'
                  - description: The Unit of Time associated with the max_stay value.
              no_return:
                type: integer
                description: The length of time (in units of no_return_unit) that a user must vacate a Curb Zone before being allowed to return for another stay.
              no_return_unit:
                allOf:
                  - $ref: '#/components/schemas/unit-of-time'
                  - description: The Unit of Time associated with the no_return value.
              user_classes:
                type: array
                items:
                  type: string
                  enum:
                    - bicycle
                    - bus
                    - cargo_bicycle
                    - car
                    - moped
                    - motorcycle
                    - scooter
                    - truck
                    - van
                    - handicap-accessible
                    - human
                    - electric_assist
                    - electric
                    - combustion
                    - autonomous
                    - construction
                    - delivery
                    - emergency_use
                    - freight
                    - parking
                    - permit
                    - rideshare
                    - school
                    - service_vehicles
                    - special_events
                    - taxi
                    - utilities
                    - vending
                    - waste_management
                description: A user class represents any class of vehicles that is regulated by a city with respect to curb space.
              rate:
                type: array
                items:
                  type: object
                  properties:
                    rate:
                      type: integer
                      description: The rate for this space in cents (or the smallest denomination of local currency) per rate_unit.
                    rate_unit:
                      allOf:
                        - $ref: '#/components/schemas/unit-of-time'
                        - description: The unit of time associated with the rate.
                    rate_unit_period:
                      type: string
                      enum:
                        - rolling
                        - calendar
                      description: The period of time that the rate_unit covers.
                    increment_duration:
                      type: integer
                      description: 'If specified, this is the smallest number of rate_units a user can pay for.'
                    increment_amount:
                      type: integer
                      description: 'If specified, the rate for this space is rounded up to the nearest increment of this amount, specified in the same currency units as rate.'
                    start_duration:
                      type: integer
                      description: The number of rate_units the vehicle must have already been present in the Curb Zone before this rate starts applying.
                    end_duration:
                      type: integer
                      description: The number of rate_units after which the rate stops applying.
                  required:
                    - rate
                    - rate_unit
                  description: A Rate defines the amount a user of the curb needs to pay when a given rule applies.
                description: The cost of using this Curb Zone when this regulation applies.
            required:
              - activity
            description: 'A rule defines who is allowed to do what, and for how long, on a curb, per the policy.'
          description: The rule(s) that this policy applies.
        time_spans:
          type: array
          items:
            type: object
            properties:
              start_date:
                allOf:
                  - $ref: '#/components/schemas/timestamp'
                  - description: 'The earliest point in time that this Time Span could apply. If unspecified, the Time Span applies to all matching periods arbitrarily far in the past.'
              end_date:
                allOf:
                  - $ref: '#/components/schemas/timestamp'
                  - description: 'The latest point in time that this Time Span could apply. If unspecified, the Time Span applies to all matching periods arbitrarily far in the future.'
              days_of_week:
                type: string
                enum:
                  - sun
                  - mon
                  - tue
                  - wed
                  - thu
                  - fri
                  - sat
                description: An array of days of the week when this Time Span applies.
              days_of_month:
                type: array
                items:
                  type: integer
                  minimum: 1
                  maximum: 31
                description: An array of days of the month when this Time Span applies.
              months:
                type: array
                items:
                  type: integer
                  minimum: 1
                  maximum: 12
                description: 'If specified, this Time Span applies only during these months (1=January, 12=December).'
              time_of_day_start:
                type: string
                description: 'The local time that this Time Span starts to apply, as 24-hour "HH:MM".'
              time_of_day_end:
                type: string
                description: 'The local time that this Time Span stops applying, as 24-hour "HH:MM".'
              designated_period:
                type: string
                enum:
                  - snow emergency
                  - holidays
                  - school days
                  - game days
                description: 'A string representing an arbitrarily-named, externally-defined period of time.'
              designated_period_except:
                type: boolean
                description: 'If specified and true, this Time Span applies at all times not matching the named designated period.'
            description: 'A Time Span defines a period of time (that may occur once or repeatedly) during which a given regulation applies. When multiple fields are combined, all criteria must be met in order for a given Time Span to apply.'
          description: 'If specified, this regulation only applies at the times defined within.'
        data_source_operator_id:
          type: array
          items:
            $ref: '#/components/schemas/uuid'
          description: An array of Data Source Operator IDs that this policy only applies to.
      required:
        - curb_policy_id
        - published_date
        - priority
        - rules
      example:
        curb_policy_id: cd0996d7-3765-4f0b-a72e-7caf7cf3fe21
        published_date: 1552678594428
        priority: 1
        data_source_operator_id:
          - b2046faf-2bc2-4f0e-b784-7cc746138555
          - aba63473-351c-4624-93ab-456db34f83a6
          - 984cae91-3a11-49eb-b68c-d325a6cc8970
        time_spans:
          - days_of_week:
              - mon
              - tue
              - wed
              - thu
              - fri
            time_of_day_start: '10:00'
            time_of_day_end: '16:00'
        rules:
          - activity: parking
            max_stay: 15
            user_classes:
              - rideshare
              - electric
      description: An object that allows or prohibits a particular set of users from using a particular curb at a particular time or times.
    curb-event:
      title: curb-event
      x-stoplight:
        id: 8w78dbvkx495z
      type: object
      properties:
        event_id:
          $ref: '#/components/schemas/uuid'
          description: The globally unique identifier of the event that occurred.
        event_type:
          type: string
          enum:
            - comms_lost
            - comms_restored
            - decommissioned
            - park_start
            - park_end
            - scheduled_report
            - enter_area
            - exit_area
          description: |-
            The type of event that has occurred.

            Possible values are defined in an enumeration.
        event_purpose:
          type: string
          enum:
            - construction
            - delivery
            - emergency_use
            - parking
            - passenger_transport
            - special_events
            - waste_management
            - device_maintenance
            - autonomous
            - ems
            - fire
            - food_delivery
            - parcel_delivery
            - police
            - public_transit
            - ride_hail
            - road_maintenance
            - service_vehicles
            - taxi
            - utility_work
            - vehicle_charging
            - vehicle_parking
            - vending
            - unspecified
          description: |-
            **Conditionally Required**

            General event purpose that the vehicle performed during its event, discernible by observation, sensors, or self-reported in copany data feeds. New event purposes MAY be generated to reflect local curb uses, but when possible, the following well-known recommended values should be used. It may not always be knowable, but where it is possible this information should be conveyed.

            If multiple purposes apply, then use the more descriptive/specific value.
        event_location:
          type: string
          description: The geographic point location where the event occurred.
        event_time:
          $ref: '#/components/schemas/timestamp'
        event_publication_time:
          $ref: '#/components/schemas/timestamp'
          description: Time at which the event became available for consumption by this API.
        event_session_id:
          $ref: '#/components/schemas/uuid'
          description: 'May be provided to tie known connected `park_start`and `park_end` event types together by a unique session ID. '
        curb_area_ids:
          type: array
          description: 'Unique IDs of the Curb Area(s) where the event occurred. Since Curb Areas may overlap, an event may occur in more than one. '
          items:
            $ref: '#/components/schemas/uuid'
        curb_zone_id:
          $ref: '#/components/schemas/uuid'
          description: |
            Unique ID of the Curb Zone where the event occurred.

            Required for events that occurred at a known Curb Zone for ALL event_types.
        curb_space_id:
          $ref: '#/components/schemas/uuid'
          description: |
            Unique ID of the Curb Space where the event occured.

            Required for events that occurred at a known Curb Space, if known and used, for these event types:
            * `park_start`

            * `park_end`

            * `enter_area`

            * `exit_area`
        data_source_type:
          type: string
          enum:
            - data_feed
            - camera
            - above_ground
            - in_ground
            - meter
            - payment
            - in_person
            - other
          description: The set of possible categories of sources that are sending this event. '
        data_source_operator_id:
          $ref: '#/components/schemas/uuid'
          description: |-
            Unique identifier of the entity responsible for operating the event data source.

            For example, IDs can identify a fleet operator sending a data feed, or the organization (company or city) operating the sensor.

            **Values are defined globally and are managed by the Open Mobility Foundation and operators may register [here](https://github.com/openmobilityfoundation/curb-data-specification/wiki/Adding-a-CDS-Data-Source-Operator-ID)**
        data_source_operator_name:
          type: string
          description: |-
            Name of the provider responsible for operating the vehicle, device, or sensor at the time of the event.

            May be sent along with `data_source_operator_id` or on its own for small operators at the discretion of the city.
        data_source_device_id:
          type: string
          description: |-
            Unique identifier of this event source, whether sensor, vehicle, camera, etc. Allows agencies to connect related Events as they are recorded by the same source.

            If coming from a provider, this is a generated UUID they use and not the same as the external vehicle_id.

            **If this field is needed for your use cases, review the OMF's [Privacy Guidance](https://github.com/openmobilityfoundation/curb-data-specification/blob/main/README.md#data-privacy).**
        data_source_manufacturer:
          type: string
          description: Manufacturer of the data source hardware or vehicle reporting event data.
        data_source_model:
          type: string
          description: Manufacturer of the data source hardware or vehicle reporting event data.
        sensor_status_is_commissioned:
          type: boolean
          description: |-
            If a sensor was used to capture this event, the commissioned status at the time that the event was reported.

            Indicates whether the sensor is currently in a state where it should be reporting data.
        sensor_status_is_online:
          type: boolean
          description: |-
            If a sensor was used to capture this event, the online status at the time that the event was reported.

            Indicates whether the sensor is currently online and reporting data.
        vehicle_id:
          type: string
          description: |-
            A vehicle identifier visible externally on the vehicle itself.

            **If this field is needed for your use cases, review the OMF's [Privacy Guidance](https://github.com/openmobilityfoundation/curb-data-specification/blob/main/README.md#data-privacy).**
        vehicle_license_plate:
          type: string
        vehicle_permit_number:
          type: string
        vehicle_length:
          type: string
        vehicle_type:
          type: string
        vehicle_propulsion_types:
          type: string
        vehicle_blocked_lane_types:
          type: string
        curb_occupants:
          type: string
        actual_cost:
          type: integer
      required:
        - event_id
        - event_type
        - event_location
        - event_time
        - event_publication_time
        - data_source_type
        - data_source_device_id
  securitySchemes: {}
  responses:
    '501':
      description: Not Implemented
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
